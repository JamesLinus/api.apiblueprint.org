FORMAT: 1A
HOST: https://api.apiblueprint.org

# API Blueprint API
API Blueprint parsing service provides parsing of API Blueprint "as a service".

## Media Types
The API uses [content negotiation](https://en.wikipedia.org/wiki/Content_negotiation) heavily. Send requests with the `Content-Type` header set to the right input media type and use the `Accept` header to select desired output as a response.

### Resource State Representation

```
application/hal+json
```

Where applicable this API uses the [HAL+JSON](https://github.com/mikekelly/hal_specification/blob/master/hal_specification.md) media type to represent resource states and to provide available affordances.

### Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used. Error responses use the [vnd.error](https://github.com/blongden/vnd.error) media type.

## Service Root [/]
API entry point.

This resource does not have any attributes, instead it provides list of available affordances.

### Affordances
- `parse` - Parse an API description

    See _API Description Parser_ resource's _Parser_ action for details.

- `compose` - Composes an API description

    See _API Description Composer_ resource's _Compose_ action for details.

### List [GET]

+ Relation: index

+ Response 200 (application/hal+json)
    + Headers

            Link: <http://docs.apiblueprint.apiary.io>; rel="profile"

    + Body

            {
                "_links": {
                    "self": {"href": "/"},
                    "parse": {"href": "/parser"},
                    "compose": {"href": "/composer"}
                }
            }

## API Description Parser [/parser]
Parse an API description format.

### Parse [POST]
API Blueprint parsing is performed as it is provided by the [Drafter](https://github.com/apiaryio/drafter) reference parser.

#### Input Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

#### Output Media Types

##### API Description Parse Result Namespace

```
application/vnd.refract.parse-result+json
application/vnd.refract.parse-result+yaml
```

General-purpose result of the parsing operation. The parse result is in form of the Refract data structure as defined in its [specification](https://github.com/refractproject/refract-spec). The parse result data comply with the [Parse Result Namespace](https://github.com/refractproject/refract-spec/blob/master/namespaces/parse-result.md).

##### API Blueprint Parse Result

```
application/vnd.apiblueprint.parseresult+json
application/vnd.apiblueprint.parseresult+yaml
```

API Blueprint Parse Result is just serialized API Blueprint AST (`application/vnd.apiblueprint.ast+json` or `application/vnd.apiblueprint.ast+yaml`) alongside with parser annotations (source map, warnings and errors) defined in [Parse Result Media Types](https://github.com/apiaryio/api-blueprint-ast/blob/master/Parse%20Result.md).

Please keep in mind that the API Blueprint parse result media types are soon to be deprecated in favor of the API Description Parse Result Namespace.

+ Relation: parse

+ Request Parse API Blueprint into Parse Result Namespace as JSON (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+json

    + Body

            ## /message
            ### GET
            
            + Response 200 (text/plain)
            
                    Hello World!
            

+ Response 200 (application/vnd.refract.parse-result+json)

        {
          "element": "parseResult",
          "content": [
            {
              "element": "category",
              "meta": {
                "classes": [
                  "api"
                ],
                "title": ""
              },
              "content": [
                {
                  "element": "category",
                  "meta": {
                    "classes": [
                      "resourceGroup"
                    ],
                    "title": ""
                  },
                  "content": [
                    {
                      "element": "resource",
                      "meta": {
                        "title": ""
                      },
                      "attributes": {
                        "href": "/message"
                      },
                      "content": [
                        {
                          "element": "transition",
                          "meta": {
                            "title": ""
                          },
                          "content": [
                            {
                              "element": "httpTransaction",
                              "content": [
                                {
                                  "element": "httpRequest",
                                  "attributes": {
                                    "method": "GET"
                                  },
                                  "content": []
                                },
                                {
                                  "element": "httpResponse",
                                  "attributes": {
                                    "statusCode": "200",
                                    "headers": {
                                      "element": "httpHeaders",
                                      "content": [
                                        {
                                          "element": "member",
                                          "content": {
                                            "key": {
                                              "element": "string",
                                              "content": "Content-Type"
                                            },
                                            "value": {
                                              "element": "string",
                                              "content": "text/plain"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "content": [
                                    {
                                      "element": "asset",
                                      "meta": {
                                        "classes": [
                                          "messageBody"
                                        ]
                                      },
                                      "attributes": {
                                        "contentType": "text/plain"
                                      },
                                      "content": "Hello World!\n"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
        

+ Request Parse API Blueprint into Parse Result Namespace as YAML (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.refract.parse-result+yaml

    + Body

            ## /message
            ### GET
            
            + Response 200 (text/plain)
            
                    Hello World!
            

+ Response 200 (application/vnd.refract.parse-result+yaml)

        element: parseResult
        content:
          - element: category
            meta:
              classes:
                - api
              title: ''
            content:
              - element: category
                meta:
                  classes:
                    - resourceGroup
                  title: ''
                content:
                  - element: resource
                    meta:
                      title: ''
                    attributes:
                      href: /message
                    content:
                      - element: transition
                        meta:
                          title: ''
                        content:
                          - element: httpTransaction
                            content:
                              - element: httpRequest
                                attributes:
                                  method: GET
                                content: []
                              - element: httpResponse
                                attributes:
                                  statusCode: '200'
                                  headers:
                                    element: httpHeaders
                                    content:
                                      - element: member
                                        content:
                                          key:
                                            element: string
                                            content: Content-Type
                                          value:
                                            element: string
                                            content: text/plain
                                content:
                                  - element: asset
                                    meta:
                                      classes:
                                        - messageBody
                                    attributes:
                                      contentType: text/plain
                                    content: |
                                      Hello World!
        error: null
        

+ Request Parse API Blueprint into JSON Parse Result AST (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+json; version=2.2

    + Body

            ## /message
            ### GET
            
            + Response 200 (text/plain)
            
                    Hello World!
            

+ Response 200 (application/vnd.apiblueprint.parseresult+json; version=2.2)

        {
          "_version": "2.2",
          "ast": {
            "_version": "4.0",
            "metadata": [
        
            ],
            "name": "",
            "description": "",
            "element": "category",
            "resourceGroups": [
              {
                "name": "",
                "description": "",
                "resources": [
                  {
                    "element": "resource",
                    "name": "",
                    "description": "",
                    "uriTemplate": "\/message",
                    "model": {
        
                    },
                    "parameters": [
        
                    ],
                    "actions": [
                      {
                        "name": "",
                        "description": "",
                        "method": "GET",
                        "parameters": [
        
                        ],
                        "attributes": {
                          "relation": "",
                          "uriTemplate": ""
                        },
                        "content": [
        
                        ],
                        "examples": [
                          {
                            "name": "",
                            "description": "",
                            "requests": [
        
                            ],
                            "responses": [
                              {
                                "name": "200",
                                "description": "",
                                "headers": [
                                  {
                                    "name": "Content-Type",
                                    "value": "text\/plain"
                                  }
                                ],
                                "body": "Hello World!\n",
                                "schema": "",
                                "content": [
                                  {
                                    "element": "asset",
                                    "attributes": {
                                      "role": "bodyExample"
                                    },
                                    "content": "Hello World!\n"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "content": [
        
                    ]
                  }
                ]
              }
            ],
            "content": [
              {
                "element": "category",
                "content": [
                  {
                    "element": "resource",
                    "name": "",
                    "description": "",
                    "uriTemplate": "\/message",
                    "model": {
        
                    },
                    "parameters": [
        
                    ],
                    "actions": [
                      {
                        "name": "",
                        "description": "",
                        "method": "GET",
                        "parameters": [
        
                        ],
                        "attributes": {
                          "relation": "",
                          "uriTemplate": ""
                        },
                        "content": [
        
                        ],
                        "examples": [
                          {
                            "name": "",
                            "description": "",
                            "requests": [
        
                            ],
                            "responses": [
                              {
                                "name": "200",
                                "description": "",
                                "headers": [
                                  {
                                    "name": "Content-Type",
                                    "value": "text\/plain"
                                  }
                                ],
                                "body": "Hello World!\n",
                                "schema": "",
                                "content": [
                                  {
                                    "element": "asset",
                                    "attributes": {
                                      "role": "bodyExample"
                                    },
                                    "content": "Hello World!\n"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "content": [
        
                    ]
                  }
                ]
              }
            ]
          },
          "error": null,
          "warnings": [
        
          ]
        }
        

+ Request Parse API Blueprint into YAML Parse Result AST (text/vnd.apiblueprint)

    + Headers

            Accept: application/vnd.apiblueprint.parseresult+yaml; version=2.2

    + Body

            ## /message
            ### GET
            
            + Response 200 (text/plain)
            
                    Hello World!
            

+ Response 200 (application/vnd.apiblueprint.parseresult+yaml; version=2.2)

        _version: '2.2'
        ast:
          _version: '4.0'
          metadata: []
          name: ''
          description: ''
          element: category
          resourceGroups:
            - name: ''
              description: ''
              resources:
                - element: resource
                  name: ''
                  description: ''
                  uriTemplate: /message
                  model: {}
                  parameters: []
                  actions:
                    - name: ''
                      description: ''
                      method: GET
                      parameters: []
                      attributes:
                        relation: ''
                        uriTemplate: ''
                      content: []
                      examples:
                        - name: ''
                          description: ''
                          requests: []
                          responses:
                            - name: '200'
                              description: ''
                              headers:
                                - name: Content-Type
                                  value: text/plain
                              body: |
                                Hello World!
                              schema: ''
                              content:
                                - element: asset
                                  attributes:
                                    role: bodyExample
                                  content: |
                                    Hello World!
                  content: []
          content:
            - element: category
              content:
                - element: resource
                  name: ''
                  description: ''
                  uriTemplate: /message
                  model: {}
                  parameters: []
                  actions:
                    - name: ''
                      description: ''
                      method: GET
                      parameters: []
                      attributes:
                        relation: ''
                        uriTemplate: ''
                      content: []
                      examples:
                        - name: ''
                          description: ''
                          requests: []
                          responses:
                            - name: '200'
                              description: ''
                              headers:
                                - name: Content-Type
                                  value: text/plain
                              body: |
                                Hello World!
                              schema: ''
                              content:
                                - element: asset
                                  attributes:
                                    role: bodyExample
                                  content: |
                                    Hello World!
                  content: []
        error: null
        warnings: []
        

## API Description Composer [/composer]
Reverse the parsing process--compose an API description format.

### Compose [POST]
The composition of API Blueprint is performed as it is provided by the [Matter Compiler](https://github.com/apiaryio/matter_compiler) tool.

#### Input Media Types

##### API Blueprint AST

```
application/vnd.apiblueprint.ast+json
application/vnd.apiblueprint.ast+yaml
```

Serialized API Blueprint AST represented either in its JSON or YAML format as defined in [API Blueprint AST Serialization Media Types](https://github.com/apiaryio/api-blueprint-ast).

Please keep in mind that the API Blueprint AST is soon to be deprecated in favor of the API Description Parse Result Namespace.

#### Output Media Types

##### API Blueprint

```
text/vnd.apiblueprint
```

API Blueprint as defined in its [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md).

+ Relation: compose

+ Request Compose API Blueprint from AST 2.0 sent as YAML (application/vnd.apiblueprint.ast+yaml; version=2.0)

        _version: 2.0
        metadata:
        name:
        description:
        resourceGroups:
        -   name:
            description:
            resources:
            -   name:
                description:
                uriTemplate: "/message"
                model:
                parameters:
                actions:
                -   name:
                    description:
                    method: "GET"
                    parameters:
                    examples:
                    - name:
                        description:
                        requests:
                        responses:
                        -   name: "200"
                            description:
                            headers:
                            -   name: "Content-Type"
                                value: "text/plain"
                            body: "Hello World!\n"
                            schema:
        

+ Response 200 (text/vnd.apiblueprint)

        ## /message
        ### GET
        
        + Response 200 (text/plain)
        
                Hello World!
        

+ Request Compose API Blueprint from AST 2.0 sent as JSON (application/vnd.apiblueprint.ast+json; version=2.0)

        {
            "_version": "2.0",
            "metadata": [],
            "name": "",
            "description": "",
            "resourceGroups": [
                {
                    "name": "",
                    "description": "",
                    "resources": [
                        {
                            "name": "",
                            "description": "",
                            "uriTemplate": "/message",
                            "model": {},
                            "parameters": [],
                            "actions": [
                                {
                                    "name": "",
                                    "description": "",
                                    "method": "GET",
                                    "parameters": [],
                                    "examples": [
                                        {
                                            "name": "",
                                            "description": "",
                                            "requests": [],
                                            "responses": [
                                                {
                                                    "name": "200",
                                                    "description": "",
                                                    "headers": [
                                                        {
                                                            "name": "Content-Type",
                                                            "value": "text/plain"
                                                        }
                                                    ],
                                                    "body": "Hello World!\n",
                                                    "schema": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
        

+ Response 200 (text/vnd.apiblueprint)

        ## /message
        ### GET
        
        + Response 200 (text/plain)
        
                Hello World!
        
